{% set layout = "ClarolineCoreBundle:Workspace:layout.html.twig" %}

{% if isDesktop() %}
    {% set layout = "ClarolineCoreBundle:Desktop:layout.html.twig" %}
{% else %}
    {% set workspace = _resource.getResourceNode().getWorkspace() %}
{% endif %}

{% extends layout %}

{% block title %}{{ _resource.getResourceNode().getName() | striptags | raw }}{% endblock %}

{% macro isel_prototype(form) %}
<table class="table">
    <tr>
        <td class="isel_label">{{ form_label(form.itemcode) }}</td>
        <td class="isel_widget">{{ form_widget(form.itemcode) }}</td>
        <td class="isel_error">{{ form_errors(form.itemcode) }}</td>
    </tr>
</table>
{% endmacro %}

{% macro tabs(inc) %}
    <li><a href="#" data-id="{{ inc }}">Exercice {{ inc }}</a></li>
{% endmacro %}

{% macro tabcontent(inc, datacode) %}
<div class="panel-body dfasmcontent" id="text_content-{{ inc }}">
    <iframe class="activity-iframe" src="{{ path('claro_resource_open', { 'resourceType': 'ujm_exercise', 'node': datacode }) }}"></iframe>
</div>
{% endmacro %}

{#
TODO :
- use entities instead of input text (id=> name)
- make it save the entity id
- display iframe of exercices
#}
{% block section_content %}
    <form action="{{ path('cpasimusante_choose_item', {'id': _resource.id}) }}" method="post" {{ form_enctype(form) }}>
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">{{ _resource.getResourceNode().getName() }}</h3>
            </div>

            <div class="panel-body" id="text_content">
                {{ form_row(form.resource) }}
                <label class="control-label col-md-4">A quels items DFASM correspond-il ?</label>
        {#
//Customize prototype & template
        http://stackoverflow.com/questions/7555702/how-to-customize-the-data-prototype-attribute-in-symfony-2-forms
        http://toni.uebernickel.info/2012/03/15/an-example-of-symfony2-collectiontype-form-field-prototype.html

//customize request
//http://www.developpez.net/forums/d1264028/php/bibliotheques-frameworks/symfony/symfony2/form-realiser-simple-formulaire-entity-field-type/
//http://stackoverflow.com/questions/8456298/custom-query-in-entity-field-type
                    <ul class="isel-item"
                        data-prototype="
                            {% filter escape %}
                            {{ include('CPASimUSanteItemSelectorBundle:Form:prototype.html.twig', { 'form': form.items.vars.prototype }) }}
                            {% endfilter %}">

                        {% for item in form.items %}
                            {{ form_row(item) }}
                        {% endfor %}
                    </ul>
                #}

                <ul class="isel-item" data-prototype="{{ _self.isel_prototype(form.items.vars.prototype)|e }}">
                    {% for item in form.items %}
                        <li>{{ _self.isel_prototype(item) }}</li>
                    {% endfor %}
                </ul>

            </div>

            <div class="panel-footer">
                <button type="button" class="btn btn-default" >{{ 'cancel'|trans({}, 'platform') }}</button>
                <button type="submit" class="btn btn-primary">{{ 'save'|trans({}, 'platform') }}</button>

                {% if form.items.count > 0 %}
                    <button class="btn btn-default show-exercices" type="button" data-toggle="tooltip" title="Voir les Exercices">
                        <span class="fa fa-eye"></span> RÃ©pondre aux questions
                    </button>
                {% endif %}
            </div>
        </div>
    </form>



<div id="activities-evaluations">


<!-- Display Exercices -->
    <div id="dfasm" style="display: none;">
        <div class="panel panel-default">
            <div class="fullframe" style="position: relative">
                <div class="popout"><a>Full page</a></div>
                <div class="popin"><a>Close</a></div>

                {% set tabs = "" %}
                {% set tabcontent = "" %}
                    {% for item in form.items %}
                        {% set tabs = tabs ~ _self.tabs(loop.index) %}
                        {% set tabcontent = tabcontent ~ _self.tabcontent(loop.index, item.itemcode.vars.data) %}
                {% endfor %}
                <ul class="nav nav-tabs">{{ tabs | raw  }}</ul>
                {{ tabcontent | raw  }}
            </div>
        </div>
    </div>
    {#
    //http://stackoverflow.com/questions/3982422/full-screen-iframe

    {% for resource in _resource.getParameters().getSecondaryResources() %}
    <div class="hide" id="resource-{{ resource.getId() }}">
        <iframe class="activity-iframe" src="{{ path('claro_resource_open', { 'resourceType': resource.getResourceType().getName(), 'node': resource.getId() }) }}"></iframe>
    </div>
     {% endfor %}    #}
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .isel-item { list-style-type:none}

        iframe {
            display: block;                 /* iframes are inline by default */
            height: 100vh !important;        /* Viewport-relative units */
        }
        .popout{
            display: block; position: absolute; top: 20px; right: 20px; padding: 3px; background-color: #ffdb27;
        }
        .popin{
            position: fixed; top: 35px; right: 35px; padding: 3px; z-index: 10001; display: none;  background-color: #ffdb27;
        }
    </style>
<!--    <link rel="stylesheet" type="text/css" media="screen" href="{{ asset('bundles/cpasimusanteitemselector/css/itemselector.css') }}"> -->
{% endblock %}

{% block javascripts %}
    {# Claroline JS #}
    {{ parent() }}
    <script type="text/javascript">
        $(document).ready(function() {

            //iframe fullpage
            $(".popout").on('click', function(){
                $(".fullframe").css({"position":"fixed","top":0,"left":0,"width":"100%","height":"100%","background-color":"#FFFFFF","z-index":1e4})
                $(this).hide();
                $(".popin").show();
            });
            $(".popin").on('click', function(){
                $(".fullframe").css({"position":"relative"})
                $(this).hide();
                $(".popout").show();
            });

            //tabs
            function selecttab(i){
                $(".dfasmcontent").hide();
                if ($("#text_content-"+i)) {
                    $("#text_content-"+i).show();
                }
            }
            selecttab(1);
            $("#dfasm .nav-tabs a").on('click', function(e){
                var id = $(this).attr("data-id");
                selecttab(id);
            });

            var $collectionHolder = $('ul.isel-item');
            var $addItemLink = $('<a href="#" class="add_item_link btn btn-info"><span class="fa fa-plus"></span> Ajouter un item</a>');
            var $newLink = $('<li></li>').append($addItemLink);

//console.log("out");console.log($collectionHolder);
            // add a delete link to all of the existing Item form li elements
            $collectionHolder.find('table tr').each(function() {
console.log("this");console.log(this);
                addItemFormDeleteLink($(this));
            });

            // add the "add an item" anchor and li to the tags ul
            $collectionHolder.append($newLink);

            // count the current form inputs we have (e.g. 2), use that as the new
            // index when inserting a new item (e.g. 2)
            $collectionHolder.data('index', $collectionHolder.find(':input').length);

            $addItemLink.on('click', function(e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // add a new item form (see code block below)
                addItemForm($collectionHolder, $newLink);
            });


            $(".activity-iframe").load(function() {
                $(this).height( $(this).contents().find("html").height() );
            });

            $('.show-exercices').on('click', function(){
                $('#dfasm').toggle();
console.log("show it");
            });

/*
            var manager = window.Claroline.ResourceManager;

            //Add a ressource Picker event for the Clinical case (wiki)
            $('body').on('click', '.add-resource', function () {
                var resource = $(this).data('id');

                if (!manager.hasPicker('itemselectorResourcePicker')) {
                    manager.createPicker('itemselectorResourcePicker', {
                        callback: function (nodes) {
                            var nodeId = _.keys(nodes)[0];
                            addResource(resource, nodeId);
                        },
                        typeWhiteList: ['wiki'],
                        restrictForOwner: true,
                        isPickerMultiSelectAllowed: false,
                        isDirectorySelectionAllowed: false
                    }, true);
                } else {
                    manager.picker('itemselectorResourcePicker', 'open');
                }
            });
*/
        });

        function addItemForm($collectionHolder, $newLink) {
            // Get the data-prototype
            var prototype = $collectionHolder.data('prototype');

            // get the new index
            var index = $collectionHolder.data('index');

            // Replace '$$name$$' in the prototype's HTML to
            // instead be a number based on how many items we have
            var newForm = prototype.replace(/__name__/g, index);

            // increase the index with one for the next item
            $collectionHolder.data('index', index + 1);

            // Display the form in the page in an li, before the "Add an Item" link li
            var $newFormLi = $('<li></li>').append(newForm);

            // also add a remove button, just for this example
            //$newFormLi.append('<a href="#" class="remove-item btn btn-danger">x</a>');

            $newLink.before($newFormLi);

            // add a delete link to the new form
            addItemFormDeleteLink($newFormLi);

            // handle the removal, just for this example
            $('.remove-item').click(function(e) {
                e.preventDefault();

                $(this).parent().remove();

                return false;
            });
        }

        function addItemFormDeleteLink($itemFormLi) {
            var $removeFormA = $('<td><a href="#" class="remove-item btn btn-danger"><span class="fa fa-trash"></span></a></td>');
            $($itemFormLi).find("tr").append($removeFormA);

            $($removeFormA).find("a").on('click', function(e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // remove the li for the tag form
                $itemFormLi.remove();
            });
        }
    </script>
{% endblock %}
